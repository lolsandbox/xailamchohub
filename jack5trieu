local Ip = game.Players.LocalPlayer
local function getNPC()
    local dist, thing = math.huge
    for i,v in pairs(game:GetService('Workspace').Enemies:GetChildren()) do
        if string.find(v.Name, "Bandit") then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if mag < dist then
                dist = mag
                thing = v
                print(thing)
            end
        end
    end
    return thing
end

local TweenService = game:GetService('TweenService')
local noclipE      = false
local antifall     = false

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do 
        if v:IsA('BasePart') and v.CanCollide == true then
            v.Cancollide = false 
            game.Players.LocalPlayer.Character.Velocity = Vector3.new(0,0,0)
        end
    end
end

local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/speed )
    local tween = TweenService:create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild('BodyVelocity') then
        antifall = Instance.new('BodyVelocity', game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService('RunService').Stepped:Connect(noclip)
        tween:Play()
    end

    tween.Completed:Connect(function ()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end
getgenv().bandit = true
while getgenv().bandit do task.wait()
    local s, e = pcall(function()
        moveto(getNPC().HumanoidRootPart.CFrame + Vector3.new(5,5,5), 100)
        game:GetService('VirtualUser'):ClickButton1(Vector2.new(9e9, 9e9))
    end)
    if not s then error(e) end
end 
unction FastAttackConnectorFunction()
    repeat wait() until game:IsLoaded()
    repeat task.wait() until game.ReplicatedStorage
    repeat task.wait() until game.Players
    repeat task.wait() until game.Players.LocalPlayer
    repeat task.wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui")
    local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
    local CombatFrameworkR = getupvalues(CombatFramework)[2]
    local RigController = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.CombatFramework.RigController)
    local RigControllerR = getupvalues(RigController)[2]
    local realbhit = require(game.ReplicatedStorage.CombatFramework.RigLib)
    local cooldownfastattack = tick()

    -- [Camera Shaker Function]
    function CameraShaker()
        task.spawn(
            function()
                local Camera = require(game.Players.LocalPlayer.PlayerScripts.CombatFramework.CameraShaker)
                while wait() do
                    pcall(
                        function()
                            Camera.CameraShakeInstance.CameraShakeState.Inactive = 0
                        end
                    )
                end
            end
        )
    end

    --[Function RmFzdCBBdHRhY2s=]

    function CurrentWeapon()
        local ac = CombatFrameworkR.activeController
        local ret = ac.blades[1]
        if not ret then
            return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
        end
        pcall(
            function()
                while ret.Parent ~= game.Players.LocalPlayer.Character do
                    ret = ret.Parent
                end
            end
        )
        if not ret then
            return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
        end
        return ret
    end

    function getAllBladeHitsPlayers(Sizes)
        Hits = {}
        local Client = game.Players.LocalPlayer
        local Characters = game:GetService("Workspace").Characters:GetChildren()
        for i = 1, #Characters do
            local v = Characters[i]
            Human = v:FindFirstChildOfClass("Humanoid")
            if
                v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and
                    Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes + 5
            then
                table.insert(Hits, Human.RootPart)
            end
        end
        return Hits
    end

    function getAllBladeHits(Sizes)
        Hits = {}
        local Client = game.Players.LocalPlayer
        local Enemies = game:GetService("Workspace").Enemies:GetChildren()
        for i = 1, #Enemies do
            local v = Enemies[i]
            Human = v:FindFirstChildOfClass("Humanoid")
            if
                Human and Human.RootPart and Human.Health > 0 and
                    Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes + 5
            then
                table.insert(Hits, Human.RootPart)
            end
        end
        return Hits
    end

    function AttackFunctgggggion()
        if game.Players.LocalPlayer.Character.Stun.Value ~= 0 then
            return nil
        end
        local ac = CombatFrameworkR.activeController
        if ac and ac.equipped then
            for indexincrement = 1, 1 do
                local bladehit =
                    require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
                    game.Players.LocalPlayer.Character,
                    {game.Players.LocalPlayer.Character.HumanoidRootPart},
                    60
                )
                if #bladehit > 0 then
                    local AcAttack8 = debug.getupvalue(ac.attack, 5)
                    local AcAttack9 = debug.getupvalue(ac.attack, 6)
                    local AcAttack7 = debug.getupvalue(ac.attack, 4)
                    local AcAttack10 = debug.getupvalue(ac.attack, 7)
                    local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
                    local NumberAc13 = AcAttack7 * 798405
                    (function()
                        NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
                        AcAttack8 = math.floor(NumberAc12 / AcAttack9)
                        AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
                    end)()
                    AcAttack10 = AcAttack10 + 1
                    debug.setupvalue(ac.attack, 5, AcAttack8)
                    debug.setupvalue(ac.attack, 6, AcAttack9)
                    debug.setupvalue(ac.attack, 4, AcAttack7)
                    debug.setupvalue(ac.attack, 7, AcAttack10)
                    for k, v in pairs(ac.animator.anims.basic) do
                        v:Play()
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then
                        game:GetService("ReplicatedStorage").RigControllerEvent:FireServer(
                            "weaponChange",
                            tostring(CurrentWeapon())
                        )
                        game.ReplicatedStorage.Remotes.Validator:FireServer(
                            math.floor(NumberAc12 / 1099511627776 * 16777215),
                            AcAttack10
                        )
                        game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "")
                    end
                end
            end
        end
    end
    local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
    local CombatFrameworkR = getupvalues(CombatFramework)[2]
    local RigController = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.CombatFramework.RigController)
    local RigControllerR = getupvalues(RigController)[2]
    local realbhit = require(game.ReplicatedStorage.CombatFramework.RigLib)
    ReturnFunctions = {}
    -- [Camera Shaker Function]
    function CameraShaker()
        task.spawn(
            function()
                local Camera = require(game.Players.LocalPlayer.PlayerScripts.CombatFramework.CameraShaker)
                while wait() do
                    pcall(
                        function()
                            Camera.CameraShakeInstance.CameraShakeState.Inactive = 0
                        end
                    )
                end
            end
        )
    end

    --[Function RmFzdCBBdHRhY2s=]

    function CurrentWeapon()
        local ac = CombatFrameworkR.activeController
        local ret = ac.blades[1]
        if not ret then
            return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
        end
        pcall(
            function()
                while ret.Parent ~= game.Players.LocalPlayer.Character do
                    ret = ret.Parent
                end
            end
        )
        if not ret then
            return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
        end
        return ret
    end

    function getAllBladeHitsPlayers(Sizes)
        Hits = {}
        local Client = game.Players.LocalPlayer
        local Characters = game:GetService("Workspace").Characters:GetChildren()
        for i = 1, #Characters do
            local v = Characters[i]
            Human = v:FindFirstChildOfClass("Humanoid")
            if
                v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and
                    Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes + 5
            then
                table.insert(Hits, Human.RootPart)
            end
        end
        return Hits
    end

    function getAllBladeHits(Sizes)
        Hits = {}
        local Client = game.Players.LocalPlayer
        local Enemies = game:GetService("Workspace").Enemies:GetChildren()
        for i = 1, #Enemies do
            local v = Enemies[i]
            Human = v:FindFirstChildOfClass("Humanoid")
            if
                Human and Human.RootPart and Human.Health > 0 and
                    Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes + 5
            then
                table.insert(Hits, Human.RootPart)
            end
        end
        return Hits
    end
    bo1 = 1
    function ReturnFunctions:Attack()
        if game.Players.LocalPlayer.Character.Stun.Value == 0 then
            local ac = CombatFrameworkR.activeController
            if ac and ac.equipped then
                for indexincrement = 1, 1 do
                    local bladehit =
                        require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
                        game.Players.LocalPlayer.Character,
                        {game.Players.LocalPlayer.Character.HumanoidRootPart},
                        60
                    )
                    if #bladehit > 0 then
                        local AcAttack8 = debug.getupvalue(ac.attack, 5)
                        local AcAttack9 = debug.getupvalue(ac.attack, 6)
                        local AcAttack7 = debug.getupvalue(ac.attack, 4)
                        local AcAttack10 = debug.getupvalue(ac.attack, 7)
                        local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
                        local NumberAc13 = AcAttack7 * 798405
                        (function()
                            NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
                            AcAttack8 = math.floor(NumberAc12 / AcAttack9)
                            AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
                        end)()
                        AcAttack10 = AcAttack10 + 1
                        debug.setupvalue(ac.attack, 5, AcAttack8)
                        debug.setupvalue(ac.attack, 6, AcAttack9)
                        debug.setupvalue(ac.attack, 4, AcAttack7)
                        debug.setupvalue(ac.attack, 7, AcAttack10)
                        for k, v in pairs(ac.animator.anims.basic) do
                            v:Play()
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then
                            game:GetService("ReplicatedStorage").RigControllerEvent:FireServer(
                                "weaponChange",
                                tostring(CurrentWeapon())
                            )
                            game.ReplicatedStorage.Remotes.Validator:FireServer(
                                math.floor(NumberAc12 / 1099511627776 * 16777215),
                                AcAttack10
                            )
                            game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "")
                        end
                    end
                end
            end
        end
    end
    CountAttack = 0 
    spawn(function()
        local MT = getrawmetatable(game)
        local OldNameCall = MT.__namecall
        setreadonly(MT, false)
        MT.__namecall = newcclosure(function(self, ...)
            local Method = getnamecallmethod()
            local Args = {...}
            if Method == 'FireServer' and self.Name == "RigControllerEvent" and  Args[1] == "hit"  then
                CountAttack = CountAttack + 1 
            end
            return OldNameCall(self, unpack(Args))
        end)
        setreadonly(MT, true)
    end)
    function ReturnFunctions:GetCount()
        return CountAttack
    end
    function ReturnFunctions:Attack(k)
        UFFF = k 
    end
    FastAttackSettings = {
        ["CDAAT"] = 80,
        ["TimeWait"] = 10
    }
    function ReturnFunctions:InputValue(CDAAT,TimeWait)
        FastAttackSettings["CDAAT"] = CDAAT
        FastAttackSettings["TimeWait"] = TimeWait
    end

    spawn(function()
        while wait() do 
            if UFFF then 
                pcall(function()
                    if CountAttack < FastAttackSettings["CDAAT"] then 
                        AttackFunctgggggion()
                    else
                        AttackFunctgggggion()
                        wait(0.45)
                    end
                end)
            end
        end
    end)
    spawn(function()
        while wait() do 
            if UFFF then 
                if CountAttack >= FastAttackSettings["CDAAT"] then 
                    TickFastAttackF = tick()
                    repeat wait() until tick()-TickFastAttackF >= FastAttackSettings["TimeWait"]
                    CountAttack = 0
                end
            end
        end
    end)
    return ReturnFunctions
end
return FastAttackConnectorFunction()
